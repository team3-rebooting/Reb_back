<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="courseList">
	<select id="selectList" parameterType="map"
		resultType="CourseListDTO">
	<![CDATA[
	SELECT * FROM (
      SELECT ROWNUM AS rnum, subquery.*
      FROM (
      	select * from (
			SELECT c.COURSE_NUMBER, c.expert_number, m.member_name as expert_name, c.COURSE_TITLE, c.COURSE_CONTENT,
			to_char(c.COURSE_POST_DATE, 'yyyy.mm.dd(day)') as COURSE_POST_DATE, to_char(c.COURSE_POST_UPDATE_DATE, 'yyyy.mm.dd(day)') as COURSE_POST_UPDATE_DATE, to_char(c.COURSE_RECRUIT_START_DATE, 'yyyy.mm.dd(day)') as COURSE_RECRUIT_START_DATE, 
			to_char(c.COURSE_RECRUIT_END_DATE, 'yyyy.mm.dd(day)') as COURSE_RECRUIT_END_DATE, to_char(c.COURSE_START_DATE, 'yyyy.mm.dd(day)') as COURSE_START_DATE, to_char(c.COURSE_END_DATE, 'yyyy.mm.dd(day)') as COURSE_END_DATE, to_char(c.COURSE_START_TIME,'hh:mi') as COURSE_START_TIME,  to_char(c.COURSE_END_TIME,'hh:mi') as COURSE_END_TIME, c.COURSE_DAY_OF_WEEK, c.COURSE_RECRUIT_COUNT,
			e.expert_field_number as field_number, e.EXPERT_LICENSE_INFO, e.EXPERT_CAREER, c.COURSE_RECRUIT_STATUS_NUMBER
			FROM tbl_course c
			LEFT JOIN TBL_COURSE_REQUEST cr ON cr.COURSE_NUMBER = c.COURSE_NUMBER
			LEFT JOIN tbl_expert e ON c.expert_number = e.expert_number
			LEFT OUTER JOIN tbl_member m ON m.member_number = e.member_number
			LEFT JOIN TBL_FILE_course fc ON fc.course_NUMBER = c.course_NUMBER
			WHERE (cr.COURSE_OPEN_STATUS_NUMBER = 2 AND cr.COURSE_REQUEST_TYPE_NUMBER = 1) OR (cr.COURSE_OPEN_STATUS_NUMBER = 2 AND cr.COURSE_REQUEST_TYPE_NUMBER = 2)
			ORDER BY c.COURSE_POST_DATE DESC) c
			order by c.COURSE_RECRUIT_STATUS_NUMBER
      ) subquery
   	) WHERE rnum BETWEEN #{startRow} AND #{endRow} 
	]]>
	</select>


	<select id="selectAll" resultType="CourseListDTO">
	<![CDATA[
		SELECT COURSE_NUMBER, expert_number, COURSE_TITLE, COURSE_CONTENT,
			to_char(COURSE_POST_DATE, 'yyyy.mm.dd(day)') as COURSE_POST_DATE, to_char(COURSE_POST_UPDATE_DATE, 'yyyy.mm.dd(day)') as COURSE_POST_UPDATE_DATE, to_char(COURSE_RECRUIT_START_DATE, 'yyyy.mm.dd(day)') as COURSE_RECRUIT_START_DATE, 
			to_char(COURSE_RECRUIT_END_DATE, 'yyyy.mm.dd(day)') as COURSE_RECRUIT_END_DATE, to_char(COURSE_START_DATE, 'yyyy.mm.dd(day)') as COURSE_START_DATE, to_char(COURSE_END_DATE, 'yyyy.mm.dd(day)') as COURSE_END_DATE, to_char(COURSE_START_TIME,'hh:mi') as COURSE_START_TIME,  to_char(COURSE_END_TIME,'hh:mi') as COURSE_END_TIME, COURSE_DAY_OF_WEEK, COURSE_RECRUIT_COUNT,
			COURSE_RECRUIT_STATUS_NUMBER
			FROM tbl_course c
	]]>
	</select>

	<update id="updateStatus" parameterType="map">
		update tbl_course set
		COURSE_RECRUIT_STATUS_NUMBER = #{courseRecruitStatusNumber} where
		COURSE_NUMBER = #{courseNumber}
	</update>

	<!-- 총 목록 개수 -->
	<select id="getTotal" resultType="int">
		select count(*)
		from tbl_course
	</select>

	<!-- 수업 요청 정보 -->
	<insert id="insert" parameterType="CourseDTO">
		<selectKey keyProperty="courseNumber" resultType="int"
			order="BEFORE">
			select seq_course.nextval from dual
		</selectKey>
		insert into tbl_course(course_number, course_title, course_content,
		expert_number,
		COURSE_RECRUIT_START_DATE, COURSE_RECRUIT_END_DATE, COURSE_START_DATE, COURSE_END_DATE,
		COURSE_START_TIME, COURSE_END_TIME, COURSE_DAY_OF_WEEK,
		COURSE_RECRUIT_COUNT, COURSE_RECRUIT_STATUS_NUMBER)
		values(#{courseNumber}, #{courseTitle}, #{courseContent},
		#{expertNumber},
		#{courseRecruitStartDate}, #{courseRecruitEndDate}, #{courseStartDate}, #{courseEndDate},
		#{courseStartTime}, #{courseEndTime}, #{courseDayOfWeek},
		#{courseRecruitCount}, #{courseRecruitStatusNumber})
	</insert>

	<!-- 수업 개설 요청 -->
	<insert id="request" parameterType="CourseRequestDTO">
		insert into
		TBL_COURSE_REQUEST(course_number, COURSE_OPEN_STATUS_NUMBER,
		COURSE_REQUEST_TYPE_NUMBER, COURSE_REQUEST_DATE)
		values(#{courseNumber}, 1, 1, to_date(sysdate, 'yyyy-mm-dd'))
	</insert>

	<!-- 수업 상세 내용 -->
	<select id="select" parameterType="int"
		resultType="CourseListDTO">
		<![CDATA[
			SELECT c.COURSE_NUMBER, c.expert_number, m.member_name as expert_name, c.COURSE_TITLE, c.COURSE_CONTENT, 
			to_char(c.COURSE_POST_DATE, 'yyyy.mm.dd(day)') as COURSE_POST_DATE, to_char(c.COURSE_POST_UPDATE_DATE, 'yyyy.mm.dd(day)') as COURSE_POST_UPDATE_DATE, to_char(c.COURSE_RECRUIT_START_DATE, 'yyyy.mm.dd(day)') as COURSE_RECRUIT_START_DATE, 
			to_char(c.COURSE_RECRUIT_END_DATE, 'yyyy.mm.dd(day)') as COURSE_RECRUIT_END_DATE, to_char(c.COURSE_START_DATE, 'yyyy.mm.dd(day)') as COURSE_START_DATE, to_char(c.COURSE_END_DATE, 'yyyy.mm.dd(day)') as COURSE_END_DATE, to_char(c.COURSE_START_TIME,'hh:mi') as COURSE_START_TIME,  to_char(c.COURSE_END_TIME,'hh:mi') as COURSE_END_TIME, c.COURSE_DAY_OF_WEEK, c.COURSE_RECRUIT_COUNT,
			e.expert_field_number as field_number, e.EXPERT_LICENSE_INFO, e.EXPERT_CAREER, c.COURSE_RECRUIT_STATUS_NUMBER,
			cr.COURSE_OPEN_STATUS_NUMBER, cr.COURSE_REQUEST_TYPE_NUMBER
			FROM tbl_course c
			LEFT JOIN TBL_COURSE_REQUEST cr ON cr.COURSE_NUMBER = c.COURSE_NUMBER 
			LEFT JOIN tbl_expert e ON c.expert_number = e.expert_number
			LEFT OUTER JOIN tbl_member m ON m.member_number = e.member_number
			LEFT JOIN TBL_FILE_course fc ON fc.course_NUMBER = c.course_NUMBER
			WHERE c.COURSE_NUMBER = #{courseNumber}
		]]>
	</select>
</mapper>